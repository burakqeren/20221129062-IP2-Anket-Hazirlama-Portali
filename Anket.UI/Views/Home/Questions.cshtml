<div class="container">
<div class="container">
    <div class="card">
        <div class="card-body">
            <div class="row justify-content-center text-center">
                <div class="col-md-8"><input id="createInput" class="form-control" type="text" /></div>

                <div class="col-md-2"><button type="button" id="createButton" class="btn btn-primary">Oluştur</button></div>
            </div>
        </div>
    </div>
    <div class="table-responsive">
        <table id="questionsTable" class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Soru</th>
                    <th scope="col">-</th>
                    <th scope="col">-</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<div class=""></div>
<div id="editModal" class="modal fade bd-example-modal-sm" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Düzenleniyor:&nbsp;<span id="editText"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editIdInput" value="0" />
                <input type="text" id="editInput" class="form-control" />
            </div>
            <div class="modal-footer">
                <button id="confirmEdit" type="button" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section _scripts {
    <script>
        $(document).ready(function () {
            var apiBaseUrl = "@ViewBag.ApiBaseUrl";

            var token = localStorage.getItem("token");

            if (token == "" || token == null) {
                location.href = "/Login";
            }

            getAll();




            //CRUD
            function getAll() {
                $.ajax({
                    url: apiBaseUrl + 'Questions',
                    type: 'GET',
                    data: {},
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json",
                    success: function (data) {
                        updateTable(data);
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            }
            function create() {
                var value = $("#createInput").val()
                if (value != "") {
                    var obj = new Object();
                    obj.text = value;
                    $.ajax({
                        url: apiBaseUrl + 'Questions',
                        type: 'POST',
                        data: JSON.stringify(obj),
                        headers: {
                            "Authorization": "Bearer " + token
                        },
                        contentType: "application/json",
                        success: function (data) {
                            $("#createInput").val("");
                            getAll();

                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                }

            }
            function edit() {
                var id = $("#editIdInput").val()
                var value = $("#editInput").val()
                if (value != "" && id != "" && id != 0) {
                    var obj = new Object();
                    obj.text = value;
                    obj.id = id;
                    $.ajax({
                        url: apiBaseUrl + 'Questions',
                        type: 'PUT',
                        data: JSON.stringify(obj),
                        headers: {
                            "Authorization": "Bearer " + token
                        },
                        contentType: "application/json",
                        success: function (data) {
                            $("#editInput").val("");
                            $("#editIdInput").val("");
                            $('#editModal').modal('hide')
                            getAll();

                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                }
            }
            function remove(id) {
                $.ajax({
                    url: apiBaseUrl + 'Questions/' + id,
                    type: 'DELETE',
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    contentType: "application/json",
                    success: function (data) {
                        if (data.status) {
                            getAll();
                            alert("Deleted.");
                        } else {

                            alert(data.message);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            }
            //Method
            function updateTable(data) {
                $("#questionsTable tbody").empty();
                var tr = '';
                $.each(data, function (i, item) {
                    var editButton = '<td> <button type="button" data-id="' + item.id + '" data-text="' + item.text + '"  class="btn btn-warning editButton adminOnly" >Düzenle</a> </td>';
                    var deleteButton = '<td><button type="button" data-id="' + item.id + '"  class="btn btn-danger deleteButton adminOnly">Sil</a></td>';

                    var idCol = "<td>" + (i + 1) + "</td>";
                    var textCol = "<td>" + item.text + "</td>";

                    tr += "<tr>" + idCol + textCol + editButton + deleteButton + "</tr>";
                });
                $("#questionsTable tbody").append(tr);
            }

            //Event
            $("#createButton").on("click", function () {
                create();
            });

            $(document).on("click", ".editButton", function () {
                var id = $(this).data("id");
                var text = $(this).data("text");

                $("#editName").html(text);
                $("#editIdInput").val(id);
                $("#editInput").val(text);

                $('#editModal').modal('show')

            });

            $(document).on("click", ".deleteButton", function () {
                if (confirm("Silmeyi onaylıyor musunz?")) {
                    var id = $(this).data("id");
                    remove(id);
                } else {

                }
            });

            $("#confirmEdit").on("click", function () {
                edit();
            });
        });
    </script>
}